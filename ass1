package main

import (
  "encoding/json"
  "fmt"
  "net/http"
)

type DataRequest struct {
  Message string json:"message"
}

type DataResponse struct {
  Status  string json:"status"
  Message string json:"message"
}

func main() {
  http.HandleFunc("/", handleRequest)
  http.ListenAndServe(":8080", nil)
}

func handleRequest(w http.ResponseWriter, r *http.Request) {
  if r.Method != http.MethodPost {
    http.Error(w, "Invalid request method", http.StatusMethodNotAllowed)
    return
  }

  var reqData DataRequest
  decoder := json.NewDecoder(r.Body)
  if err := decoder.Decode(&reqData); err != nil {
    http.Error(w, "Invalid JSON format", http.StatusBadRequest)
    return
  }

  if reqData.Message == "" {
    http.Error(w, "Invalid JSON message", http.StatusBadRequest)
    return
  }

  fmt.Println("Received message:", reqData.Message)

  response := DataResponse{
    Status:  "success",
    Message: "Data successfully received",
  }

  w.Header().Set("Content-Type", "application/json")
  w.WriteHeader(http.StatusOK)

  encoder := json.NewEncoder(w)
  if err := encoder.Encode(response); err != nil {
    http.Error(w, "Internal server error", http.StatusInternalServerError)
    return
  }
}
